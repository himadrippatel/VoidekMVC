@model UIContainer<Alliant.Domain.RoleVsUser>
@{
    ViewBag.Title = "Role user";
   // bool isEdit = Model.dtUserActivities["activity_usermanagement_rolevsuser_update"];
    bool isDelete = Model.dtUserActivities["activity_usermanagement_rolevsuser_delete"];
}
<div class="content-body">
    <section class="horizontal-grid" id="horizontal-grid">
        <div class="row">
            <div class="col-md-12">
                <div class="card">
                    <div class="card-header">
                        <h4 class="card-title">
                            Search Role User
                            @if(Model.dtUserActivities["activity_usermanagement_rolevsuser_insert"])
                            { 
                            <a href="@Url.Action("Create","RoleVsUser",new { @area=Html.AreaUserManagement()})" onclick="return ajaxAnchorClick(this, function () { $('.jsRoleVsUserCollapse').trigger('click'); })" data-ajaxdivid="RoleVsUserForm">
                                <i class="la la-plus"></i> Create Role User
                            </a>
                            }
                        </h4>
                        <a class="heading-elements-toggle"><i class="ft-align-justify font-medium-3"></i></a>
                        <div class="heading-elements">
                            <ul class="list-inline mb-0">
                                <li><a data-action="collapse" class="jsRoleVsUserCollapse" ><i class="ft-minus"></i></a></li>
                            </ul>
                        </div>
                    </div>
                    <div class="card-body">
                        @using (Html.BeginForm())
                        {
                            if (Model.dtUserActivities["activity_usermanagement_rolevsuser_search"])
                            {
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="table-responsive">
                                        @(Html.Kendo().Grid<Alliant.Domain.RoleVsUser>()
                                                            .Name("RoleVsUserGrid")
                                                            .NoRecords("No record found.")
                                                            .Columns(columns =>
                                                            {
                                                            columns.Template(@<text></text>)
                            .HeaderTemplate("Action").Visible(isDelete)
                              //.ClientTemplate("<a href='" + Url.Action("DeletePost", "RoleVsUser", new { area = Html.AreaUserManagement() }) + "/#=RoleVsUserID#' onclick='return ajaxSweetAlert(this)'><i class='la la-remove'></i></a>");
                              .ClientTemplate(isDelete ? "&nbsp;<a href='" + Url.Action("DeletePost", "RoleVsUser", new { area = Html.AreaUserManagement() }) + "/#=RoleVsUserID#' onclick='return ajaxSweetAlert(this)'><i class='la la-remove'></i></a>" : "");
                                                                columns.Bound(c => c.RoleName);
                                                                columns.Bound(c => c.CustomerName);
                                                                columns.Bound(c => c.CreatedOn).Format("{0:dd-MM-yyyy hh:mm:ss}");
                                                                columns.Bound(c => c.UpdatedOn).Format("{0:dd-MM-yyyy hh:mm:ss}");
                                                            })
 .Pageable(p =>
                                   {
                                       p.PreviousNext(false);
                                       p.Numeric(false);
                                   })
.Filterable()
.Scrollable(sc => sc.Endless(true))
.Scrollable(s => s.Height(550))
.Sortable()
.DataSource
(dataSource => dataSource
.Ajax()
.PageSize(Constant.KendoDefaultPageSize)
.Read(read => read.Action("GetRoleVsUserBySearch", "RoleVsUser", new { area = Html.AreaUserManagement() }))
.ServerOperation(true)
.Model(RoleVsUser => RoleVsUser.Id(x => x.RoleVsUserID))
)
                                        )
                                    </div>
                                </div>
                            </div>
                            }
                        }
                    </div>
                </div>
            </div>
        </div>
        <div id="RoleVsUserForm" class="RoleVsUserForm">

        </div>       
    </section>
</div>

