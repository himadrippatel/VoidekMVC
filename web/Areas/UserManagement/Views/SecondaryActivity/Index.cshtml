@model UIContainer<Alliant.Domain.SecondaryActivity>
@{
    ViewBag.Title = "Parent Child Permission";
    bool IsDelete = Model.dtUserActivities["activity_usermanagement_secondaryactivity_delete"];
}
<div class="content-body">
    <section class="horizontal-grid" id="horizontal-grid">
        <div class="row">
            <div class="col-md-12">
                <div class="card">
                    <div class="card-header">
                        <h4 class="card-title">
                            Search Parent Child Permission
                            @if (Model.dtUserActivities["activity_usermanagement_secondaryactivity_insert"])
                            {
                            <a href="@Url.Action("Create","SecondaryActivity",new { @area=Html.AreaUserManagement()})"
                               onclick="return ajaxAnchorClick(this, function () { $('.jsSecondaryActivityCollapse').trigger('click'); })" data-ajaxdivid="SecondaryActivityForm">
                                <i class="la la-plus"></i> Create Parent Child Permission
                            </a>
                            }
                        </h4>
                        <a class="heading-elements-toggle"><i class="ft-align-justify font-medium-3"></i></a>
                        <div class="heading-elements">
                            <ul class="list-inline mb-0">
                                <li><a data-action="collapse" class="jsSecondaryActivityCollapse"><i class="ft-minus"></i></a></li>
                            </ul>
                        </div>
                    </div>
                    <div class="card-body">
                        @using (Html.BeginForm())
                        {
                            if (Model.dtUserActivities["activity_usermanagement_secondaryactivity_search"])
                            {
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="table-responsive">
                                            @*@(Html.Kendo().Grid<Alliant.Domain.SecondaryActivity>()
                                                                                                        .Name("SecondaryActivityGrid")
                                                                                                        .NoRecords("No record found.")
                                                                                                        .Columns(columns =>
                                                                                                        {
                                                                                                        columns.Template(@<text></text>)
                                                .HeaderTemplate("Action").Visible(IsDelete)
                                                                                                    //.ClientTemplate("<a href='" + Url.Action("DeletePost", "SecondaryActivity", new { area = Html.AreaUserManagement() }) + "/#=SecondaryActivityID#' onclick='return ajaxSweetAlert(this)'><i class='la la-remove'></i></a>");
                                                                                                    .ClientTemplate(IsDelete ? "<a href='" + Url.Action("DeletePost", "SecondaryActivity", new { area = Html.AreaUserManagement() }) + "/#=SecondaryActivityID#' onclick='return ajaxSweetAlert(this)'><i class='la la-remove'></i></a>" : "");
                                                                                                            columns.Bound(c => c.ParentActivity);
                                                                                                            columns.Bound(c => c.ActivityName);
                                                                                                            columns.Bound(c => c.CreatedOn).Format("{0:dd-MM-yyyy hh:mm:ss}");
                                                                                                        })
                                                .Pageable(p =>
                                                {
                                                    p.PageSizes(Constant.KendoGridPageSize);
                                                })
                                                .Filterable()
                                                .Sortable()
                                                .DataSource
                                                (dataSource => dataSource
                                                .Ajax()
                                                .PageSize(Constant.KendoDefaultPageSize)
                                                .Read(read => read.Action("GetSecondaryActivityBySearch", "SecondaryActivity", new { area = Html.AreaUserManagement() }))
                                                .ServerOperation(true)
                                                .Model(SecondaryActivity => SecondaryActivity.Id(x => x.SecondaryActivityID))
                                                )
                                                                                        )*@

                                            @(Html.Kendo().TreeList<Alliant.Domain.SecondaryActivity>()
                                                        .Name("SecondaryActivityGrid")
                                                        .Columns(columns =>
                                                        {
                                                            columns.Add().Field(f => f.ActivityName).HeaderTemplate("Permission");
                                                            // columns.Add().Field(f => f.ParentActivity);
                                                        })
                                                        //.ColumnMenu()

                                                        .Pageable(p =>
                                                        {
                                                            p.PreviousNext(false);
                                                            p.Numeric(false);
                                                        })
                                                          //.Scrollable(sc => sc.Endless(true))
                                                         

                                                        .DataSource(dataSource => dataSource
                                                        .PageSize(Constant.KendoDefaultPageSize)
                                                        .Read(read => read.Action("GetSecondaryActivityBySearch", "SecondaryActivity", new { area = Html.AreaUserManagement() }))
                                                        .Model(m =>
                                                        {
                                                            m.Id(f => f.ActivityName);
                                                            m.ParentId(f => f.ParentActivity);
                                                        })
                                                        )
                                            )

                                        </div>
                                    </div>
                                </div>
                                @*<div class="row">
                                        <div class="col-md-8">
                                            <h2>Tree</h2>
                                            <div id="treeview-checkable" class=""></div>
                                        </div>
                                        <div class="col-md-4">
                                            <h2>Events</h2>
                                            <div id="checkable-output"></div>
                                        </div>
                                    </div>*@
                            }
                        }
                    </div>
                </div>
            </div>
        </div>
        <div id="SecondaryActivityForm" class="SecondaryActivityForm">

        </div>
    </section>
</div>
@section JSSection
{
    <script>
        $(document).ready(function () {
            var defaultData = [
                {
                    text: 'Parent 1',
                    href: '#parent1',
                    tags: ['4'],
                    nodes: [
                        {
                            text: 'Child 1',
                            href: '#child1',
                            tags: ['2'],
                            nodes: [
                                {
                                    text: 'Grandchild 1',
                                    href: '#grandchild1',
                                    tags: ['1'],
                                    nodes: [
                                        {
                                            text: 'Grandchild 1.1',
                                            href: '#grandchild1.1',
                                            tags: ['0']
                                        }
                                    ]
                                },
                                {
                                    text: 'Grandchild 2',
                                    href: '#grandchild2',
                                    tags: ['0']
                                }
                            ]
                        },
                        {
                            text: 'Child 2',
                            href: '#child2',
                            tags: ['0']
                        }
                    ]
                },
                {
                    text: 'Parent 2',
                    href: '#parent2',
                    tags: ['0']
                },
                {
                    text: 'Parent 3',
                    href: '#parent3',
                    tags: ['0']
                },
                {
                    text: 'Parent 4',
                    href: '#parent4',
                    tags: ['0']
                },
                {
                    text: 'Parent 5',
                    href: '#parent5',
                    tags: ['0']
                }
            ];
            var $checkableTree = $('#treeview-checkable').treeview({
                data: defaultData,
                showIcon: false,
                showCheckbox: true,
                multiSelect: true,

                onNodeChecked: function (event, node) {
                    $('#checkable-output').prepend('<p>' + node.text + ' was checked</p>');
                },
                onNodeUnchecked: function (event, node) {
                    $('#checkable-output').prepend('<p>' + node.text + ' was unchecked</p>');
                },
                onNodeSelected: function (event, node) {
                    //console.log($(this));
                    //console.log(event);
                    //console.log(node);
                    $('#checkable-output').prepend('<p>' + node.text + ' was selected</p>');
                },
                onNodeUnselected: function (event, node) {
                    $('#checkable-output').prepend('<p>' + node.text + ' was un selected</p>');
                },
                onClickHandler: function (event, node) {
                    console.log(event);
                    console.log(node);
                }
            });
        });
    </script>
}